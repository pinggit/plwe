#https://gist.github.com/pinggit/90bdfc488a040626978a9c4504c88b6e
#GistID: 90bdfc488a040626978a9c4504c88b6e
#ping: mod based on:
#https://gist.github.com/spicycode/1229612
#
#v2.4 update(2017-10-16) 
#https://shapeshed.com/custom-vim-bindings-in-tmux-2-4/
#https://github.com/tmux/tmux/issues/754
#
#key-stroke sum {{{1
#   shift-arrows   :reserved for vim
#   ctrl-arrows    :resizing pane
#   alt-arrows     :moving between windows 


#pending issues {{{1
#my vim shift-arrow map doesn't work from inside tmux
#
#ping: add
#not good, need to re-define EVERYTHING
#unbind-key -a          #unbind everything first

#general {{{1
# 0 is too far from ` ;)
set -g base-index 1
#ping
set -g wrap-search off
set -g prefix C-b
#don't allow automatic rename of windows title
set-option -g allow-rename off

# No delay for escape key press
# this sometime caused issues: some crab chars "1;2c"
# change to 1 solved it
set -sg escape-time 10

# Reload tmux config
bind r source-file ~/.tmux.conf

set-window-option -g aggressive-resize

# Automatically set window title
set-window-option -g automatic-rename on
set-option -g set-titles on

#ping:add: pass key stokes through (to vim)
set-window-option -g xterm-keys on

#ping: this caused some issues (some crab chars)
set -g default-terminal screen-256color
set -g status-keys vi
set -g history-limit 1000000


#for nested tmux {{{1
#https://unix.stackexchange.com/questions/130730/how-to-quickly-send-commands-to-nested-tmux-sessions
#c-a will trigger the current prefix(c-b) to be "sent" (to the inner tmux)
#this will disable the old c-a function (just to head of a line), so better apply when needed only
#bind-key -n C-a send-prefix
#to unbind:
#unbind-key -n C-a

#all about mouse {{{1
##ping:change: disable mouse
##tmux 2.1 and 2.1+ removed all 4 of these
##  http://stackoverflow.com/questions/11832199/tmux-set-g-mouse-mode-on-doesnt-work
#setw -g mode-mouse off          
##ping:add:disable other mouse abilities
#set -g mouse-select-pane off
#set -g mouse-resize-pane off
#set -g mouse-select-window off

#ping: this make mouse scroll enables copy mode and scroll in the copy buff
#great!
#set-window-option -g mode-mouse on

##toggle mouse on/off
##http://tangledhelix.com/blog/2012/07/16/tmux-and-mouse-mode/
#bind m \
#    set -g mode-mouse on \;\
#    set -g mouse-resize-pane on \;\
#    set -g mouse-select-pane on \;\
#    set -g mouse-select-window on \;\
#    display 'Mouse: ON'
#
#bind M \
#    set -g mode-mouse off \;\
#    set -g mouse-resize-pane off \;\
#    set -g mouse-select-pane off \;\
#    set -g mouse-select-window off \;\
#    display 'Mouse: OFF'

#these report errors (V2.3)
#/home/pings/.tmux.conf:80: usage: set-option [-agosquw] [-t target-window] option [value]
#/home/pings/.tmux.conf:81: no current session
#/home/pings/.tmux.conf:83: usage: set-option [-agosquw] [-t target-window] option [value]
#/home/pings/.tmux.conf:84: no current session
#
#tmux 2.1 and later:
# set -g mouse off
# bind-key a \
#         set -g mouse on \;\ 
#         display 'Mouse: ON'
# bind-key M \
#         set -g mouse off \;\ 
#         display 'Mouse: OFF'

# Mouse support ------------------------------------------------
set -g mouse on

bind a \
    set -g mouse\;\
    display "mouse #{?mouse,ON,OFF}"

# End Mouse support --------------------------------------------


setw -g monitor-activity on     #ping: enable activity alerts
#ping:add
set -g visual-activity off
set -g status-justify centre    #center the win list

#split {{{1
bind-key v split-window -h
bind-key s split-window -v

#panel resize {{{1
#1:ping: add these
#good: works more smoothly than default (with prefix)
bind-key -n C-down resize-pane -D
bind-key -n C-up resize-pane -U
bind-key -n C-left resize-pane -L
bind-key -n C-right resize-pane -R

#2.
# no much use really. J used for join-pane
# bind-key J resize-pane -D 5
bind-key K resize-pane -U 5
bind-key H resize-pane -L 5
bind-key L resize-pane -R 5

#3.
bind-key M-j resize-pane -D
bind-key M-k resize-pane -U
bind-key M-h resize-pane -L
bind-key M-l resize-pane -R

#3.
#ping: add shift-arrow to be same as vim, but with prefix
# doesn't work well, have to press prefix everytime
#bind S-Left resize-pane -L
#bind S-Right resize-pane -R
#bind S-Up resize-pane -U
#bind S-Down resize-pane -D

#pane selection {{{1
# 1. good
#Vim style pane selection
bind h select-pane -L
bind j select-pane -D 
bind k select-pane -U
bind l select-pane -R

#https://unix.stackexchange.com/questions/14300/moving-tmux-pane-to-window
bind-key J command-prompt -p "join pane from:"  "join-pane -s '%%'"
bind-key S command-prompt -p "send pane to:"  "join-pane -t '%%'"

# 2. good
# Use Alt-vim keys without prefix key to switch panes
bind -n M-h select-pane -L
bind -n M-j select-pane -D 
bind -n M-k select-pane -U
bind -n M-l select-pane -R

# 3. good:
# Use Alt-arrow keys without prefix key to switch panes
#bind -n M-Left select-pane -L
#bind -n M-Right select-pane -R
#bind -n M-Up select-pane -U
#bind -n M-Down select-pane -D

#ping:add:
#switch between last 2 panes:good
#(2018-12-02) remove, this will loss literal c-b sent to apps inside tmux
#bind-key b last-pane

#toggle sync (send-to-all-pane) multiple panes
#bind-key m setw sync
#this looks better, display a msg
bind m \
    set synchronize-panes \;\
    display "Sync #{?synchronize-panes,ON,OFF}"
#window selection {{{1

#ping: this work great but conflict with vim
# Shift arrow to switch windows
#bind -n S-Left  previous-window
#bind -n S-Right next-window

#ping: add these
#conflicting with vim (move tabs)
#bind -n M-Left  previous-window
#bind -n M-Right next-window

#ping: C-b b or C-b C-b to switch between last 2 win
#bind-key b last-window
#good
bind-key C-b last-window
bind-key -n C-S-Left swap-window -t -1
bind-key -n C-S-Right swap-window -t +1

#THEME {{{1
set -g status-bg black
set -g status-fg white
set -g window-status-current-bg red
set -g window-status-current-fg black
set -g window-status-current-attr bold
set -g status-interval 60
set -g status-left-length 30
set -g status-left '#[fg=green](#S) #(whoami)'
#set -g status-right '#[fg=yellow]#(cut -d " " -f 1-3 /proc/loadavg)#[default] #[fg=white]%H:%M#[default]'
#(2020-03-05) add date
set -g status-right '#[fg=yellow]#(cut -d " " -f 1-3 /proc/loadavg)#[default] #[fg=white]%Y-%m%d-%H%M#[default]'

#hardcopy {{{1
#print screen: gnu screen's 'hardcopy'
#http://openbsd.7691.n7.nabble.com/tmux-print-screen-td243276.html
bind-key P command-prompt -p 'save history to filename:' -I '/tmp/tmux-%F_%H_%M_%S.log' 'capture-pane -S -32768 ; save-buffer %1 ; delete-buffer' 

#http://unix.stackexchange.com/questions/103108/capture-colors-with-tmux-buffer-copy-hardcopy
bind H capture-pane -e \; save-buffer ~/tmux.hardcopy \; delete-buffer

#vi copy mode{{{1}}}
setw -g mode-keys vi

#"old" ways before V2.4 {{{2
#unbind-key -t vi-copy Space
#bind-key -t vi-copy   Space  page-down

#bind-key -t vi-copy   v  begin-selection
#bind-key -t vi-copy   y  copy-selection -x
#bind-key -t vi-copy   -  page-up
#bind-key -t vi-copy   V  select-line

#"new" ways after V2.4 {{{2
unbind-key -T   copy-mode-vi         Space
bind-key   -T   copy-mode-vi         Space  send-keys -X page-down

bind-key   -T   copy-mode-vi         v      send-keys -X begin-selection
#(Mon, Oct 16, 2017  5:36:02 AM) 
#this doesn't work anymore in tmux2.4
#bind-key   -T   copy-mode-vi         y      send-keys -X copy-selection    -x
#and according to: https://github.com/tmux-plugins/tmux-yank/issues/96
#this doesn't work in cygwin
#bind-key   -T   copy-mode-vi         y      send-keys -X copy-pipe-and-cancel clip.exe

#this is tested and works in cygwin, finally! 
#no need (and do NOT install) any plugins(copycat, yank, etc)!
# these does not work well
# (2018-01-31) got from below, not work in cygwin
# https://blogs.technet.microsoft.com/jessicadeen/linux/tmux-2-6-copypaste-and-bind-tips-and-tricks/
# bind-key -T copy-mode-vi y send-keys -X copy-pipe-and-cancel "reattach-to-user-namespace putclip"
# bind-key -T copy-mode-vi MouseDragEnd1Pane send-keys -X copy-pipe-and-cancel "reattach-to-user-namespace putclip" \; display-message "highlighted selection copied to system clipboard"

#this works for cygwin (putclip), 
#for ubuntu define alias to use xclip as putclip
#alias putclip='xclip -selection clipboard'
#also xclip not work over ssh
bind-key   -T copy-mode-vi         y      send-keys -X copy-pipe-and-cancel putclip \; display-message "highlighted selection is copied to system clipboard!"
bind-key   -T copy-mode-vi MouseDragEnd1Pane send-keys -X copy-pipe-and-cancel putclip \; display-message "highlighted selection is copied to system clipboard!"

#for ubuntu
bind-key   -T copy-mode-vi         y      send-keys -X copy-pipe-and-cancel "xclip -selection clipboard" \; display-message "highlighted selection is copied to system clipboard!"
bind-key   -T copy-mode-vi MouseDragEnd1Pane send-keys -X copy-pipe-and-cancel "xclip -selection clipboard" \; display-message "highlighted selection is copied to system clipboard!"

bind-key   -T copy-mode-vi WheelUpPane send -X scroll-up
bind-key   -T copy-mode-vi WheelDownPane send -X scroll-down

bind-key   -T copy-mode-vi         -      send-keys -X page-up
bind-key   -T copy-mode-vi         V      send-keys -X select-line
bind       -T copy-mode-vi         C-v    send-keys -X rectangle-toggle

#thinking to improve it: (2016-12-11) 
#but it seems doesn't work:
#bind-key -t vi-copy   y  copy-selection\;save-buffer ~/.tmux-buffer \; run-shell "xsel -i -b <~/.tmux-buffer && rm ~/.tmux-buffer"

#these are said to be working:
#but I never make xclip/xsel stuff works in remote...
#bind-key C-c run "tmux show-buffer | xclip -selection clipboard -i"
#bind-key -t vi-copy y copy-pipe 'xclip -in -selection clipboard'
#bind-key p save-buffer ~/.tmux-buffer \; run-shell "xsel -i -b < ~/.tmux-buffer && rm ~/.tmux-buffer"

#useless in tmux2.2
#set -g status-utf8 on  # Enable utf-8 (2015-11-09) 

#plugin {{{1}}}

# List of plugins
set -g @plugin 'tmux-plugins/tpm'

#set -g @plugin 'tmux-plugins/tmux-sensible'

set -g @plugin 'tmux-plugins/tmux-resurrect'
set -g @resurrect-strategy-vim 'session'

#set -g @plugin 'tmux-plugins/tmux-copycat'

# to yank into system clipboard, tested working in cygwin
# set -g @plugin 'tmux-plugins/tmux-yank'

# Tmux Logging, added (2018-02-18) 
set -g @plugin 'tmux-plugins/tmux-logging'
set -g @logging-path '$HOME/tmux-logs'
# these 2 do not work, will exit all tmux and see
set -g @screen-capture-path '$HOME/tmux-logs'
set -g @save-complete-history-path '$HOME/tmux-logs'

# Other examples:
# set -g @plugin 'github_username/plugin_name'
# set -g @plugin 'git@github.com/user/plugin'
# set -g @plugin 'git@bitbucket.com/user/plugin'

# Initialize TMUX plugin manager (keep this line at the very bottom of tmux.conf)
run '~/.tmux/plugins/tpm/tpm'
# for pane
set -g @resurrect-capture-pane-contents 'on'
# for vim
set -g @resurrect-strategy-vim 'session'

#removing {{{2}}}
#ping@ubuntu47-3:~$ ~/.tmux/plugins/tpm/bin/clean_plugins
#Removing "tmux-resurrect"
#  "tmux-resurrect" clean success
#  Removing "tmux-sensible"
#    "tmux-sensible" clean success
#    ping@ubuntu47-3:~$
