
#some hidden LM shell commands automations
#---LM10A Fc3ForwardingCommandsListV4-2--- {{{2
#
#!!!!NOTE --- Please note that while taking the logs the exact order of commands has to be kept.  
#
#The commands/sections with * should only be executed for LM10A and not for LM10U cards
#
set adaptor 0
set port 0
set Fc3FwdCmdsList(SHELL) {Fc3FwdCmdsList1 Fc3FwdCmdsList2 E_DumpRegisterPortRxCal}
#set Fc3FwdCmdsList1(SHELL) {E_DumpRegisterPortRxCal E_WanFpga E_SRA E_IXP E_ExceptionStats E_FabricFPGA E_GEDriverStats E_ICCInternalNetwork E_GE8HdeIOADebug   }
set Fc3FwdCmdsList1(SHELL) {E_DumpRegisterPortRxCal E_SRA E_IXP E_ExceptionStats E_FabricFPGA E_GEDriverStats E_ICCInternalNetwork E_GE8HdeIOADebug   }
#set Fc3FwdCmdsList2(SHELL) {E_DumpRegisterPortRxCal E_WanFpga E_SRA E_IXP E_ExceptionStats E_FabricFPGA E_GEDriverStats E_ICCInternalNetwork E_GE8HdeIOADebug   }
set Fc3FwdCmdsList2(SHELL) {E_DumpRegisterPortRxCal E_SRA E_IXP E_ExceptionStats E_FabricFPGA E_GEDriverStats E_ICCInternalNetwork E_GE8HdeIOADebug   }

# 				GE20HdeIOADebug TenGE1ApsIOADebug

#FC3 Forwarding commands list
#============================
#
#================================= 
#Dump register PORT_RX_CALENDER {{{3
#=================================
#
set E_DumpRegisterPortRxCal(SHELL) [list 				\
    				"->" "d 0xd60f4500" 		\
				"->" "d 0xd70f4500" 		\
				"->" "d 0xd60f4000,200,2" 	\
				"->" "d 0xd70f4000,200,2" 	\
]
#d 0xd60f4500
#
#d 0xd70f4500
#
#d 0xd60f4000,200,2         <---for egress IXP.
#
#d 0xd70f4000,200,2         <----for ingress IXP.
#
#
#
#=================================================
#WanFpGA - written twice below as needed to be run twice {{{3
#===================================================
set E_WanFpga(SHELL) [list 						\
    				"->" "showWanFpga" 		\
				"->" "d 0xe1100000,160,4" 	\
				"->" "d 0xe0800000,320,2" 	\
    				"->" "showWanFpga" 		\
				"->" "d 0xe1100000,160,4" 	\
				"->" "d 0xe0800000,320,2" 	\
]
#
#showWanFpga
#d 0xe1100000,160,4 ==> For LM10A , this is WanFPGA memory dump (*)
#d 0xe0800000,320,2 ==> For lm10APlus this is WanFpga memory dump (*)
#
#
#showWanFpga
#d 0xe1100000,160,4 ==> For LM10A , this is WanFPGA memory dump (*)
#d 0xe0800000,320,2 ==> For lm10APlus this is WanFpga memory dump (*)
#
#---------------------------------
#
#SRA (*) - written twice below as needed to run twice {{{3
#=========================
#
set E_SRA(SHELL) [list 							\
    				"->" "sraShowInternalCounts"    	\
				"->" "sraShowQueues 0" 			\
				"->" "sraShowQueues 1" 			\
    				"->" "sraShowForwardingQueues 0"	\
				"->" "sraShowForwardingQueues 1" 	\
                                "->" "sraShowInternalCounts" 		\
                                "->" "sraShowQueues 0" 		\
                                "->" "sraShowQueues 1" 		\
                                "->" "sraShowForwardingQueues 0" 		\
                                "->" "sraShowForwardingQueues 1" 		\
]

#sraShowInternalCounts
#sraShowQueues 0
#sraShowQueues 1
#sraShowForwardingQueues 0
#sraShowForwardingQueues 1
#
#sraShowInternalCounts
#sraShowQueues 0
#sraShowQueues 1
#sraShowForwardingQueues 0
#sraShowForwardingQueues 1
#
#
#IXP {{{3
#===
set E_IXP(SHELL) [list 									\
    				"->" "ixpEnableRxStats 0"                        	\
				"->" "ixpEnableRxStats 1"                        	\
				"->" "ixpEnableTxStats 0"                        	\
    				"->" "ixpEnableTxStats 1"                        	\
                                "->" "ddShowNZStats 0"                           	\
                                "->" "ddShowNZStats 1"                           	\
                                "->" "getAllMeStatus (0)"                        	\
                                "->" "getAllMeStatus (1)"                         	\
                                "->" "getFreeHandles 0,0"                         	\
                                "->" "getFreeHandles 1,0" 				\
                                "->" {showTraceLog ("Egress IXP",0,1024)} 		\
                                "->" {showTraceLog  ("Ingress IXP",0,1024)} 		\
                                "->" {showTraceLog  ("IxpDetector",0,1024)} 		\
                                "->" {showTraceLog "IxpDetectorFirstMeResets"} 		\
                                "->" "print__11Ic1Detector" 				\
                                "->" "showIxps"                                         \
                                "->" "ixpStats 0"                                       \
                                "->" "ixpStats 1"                                       \
                                "->" "ixpRings 0"                                       \
                                "->" "ixpRings 1"                                       \
                                "->" "ixpMailboxStats 0"                                \
                                "->" "ixpMailboxStats 1"                                \
                                "->" "ixpRxStats 0,1"                                   \
                                "->" "ixpRxStats 1,1"                                   \
                                "->" "ixpTxStats 0,1"                                   \
                                "->" "ixpTxStats 1,1"                                   \
                                "->" "ixpMcastStats 1,1"                                \
                                "->" "d 0xd8000030,1,4"                                 \
                                "->" "d 0xd8008150,1,4"                                 \
                                "->" "ixpDisableRxStats 0"                              \
                                "->" "ixpDisableRxStats 1" 				\
                                "->" "ixpDisableTxStats 0" 				\
                                "->" "ixpDisableTxStats 1" 				\
]

#ixpEnableRxStats 0
#ixpEnableRxStats 1
#ixpEnableTxStats 0
#ixpEnableTxStats 1
#
#ddShowNZStats 0
#ddShowNZStats 1
#getAllMeStatus (0)
#getAllMeStatus (1)
#getFreeHandles 0,0
#getFreeHandles 1,0
#showTraceLog ("Egress IXP",0,1024)
#showTraceLog  ("Ingress IXP",0,1024)
#showTraceLog  ("IxpDetector",0,1024)
#showTraceLog "IxpDetectorFirstMeResets"
#
#print__11Ic1Detector
#showIxps 
#ixpStats 0
#ixpStats 1
#ixpRings 0
#ixpRings 1
#ixpMailboxStats 0
#ixpMailboxStats 1
#ixpRxStats 0,1
#ixpRxStats 1,1
#ixpTxStats 0,1
#ixpTxStats 1,1
#ixpMcastStats 1,1
#d 0xd8000030,1,4 
#d 0xd8008150,1,4 
#The Below 4 command execute after completion of IXP data collection
#ixpDisableRxStats 0
#ixpDisableRxStats 1
#ixpDisableTxStats 0
#ixpDisableTxStats 1
#
#Exception Stats: {{{3
#=============
set E_ExceptionStats(SHELL) [list 								\
    				"->" "showFc3DmaDriver"                        		\
				"->" "showFc3DmaDriverStats"                        	\
				"->" "showFc3DmaDriverQueues"                        	\
    				"->" "showFc3DmaDriverChannels"                        	\
                                "->" {showTraceLog "Fc3DmaDriver"}                   	\
                                "->" "showIntNetStats"                                 	\
                                "->" "showAlShimStats"                        		\
                                "->" "showExShim"                         		\
                                "->" "dosAlShowProtocolCounts" 				\    
]


#showFc3DmaDriver
#showFc3DmaDriverStats
#showFc3DmaDriverQueues
#showFc3DmaDriverChannels
#showTraceLog "Fc3DmaDriver"
#showIntNetStats
#showAlShimStats
#showExShim
#dosAlShowProtocolCounts       
#
#
#=========================================================
#Fabric - the following command needs to be run from CLI -  {{{3
#Have a parallent Terminal client is open and type below
#=========================================================
set E_FabricFPGA(SHELL) [list 								\
    				"->" "fabricFpgaShow"                         		\
				"->" "d 0xe1800000,200,2"                          	\
				"->" "showFQ"                                       	\
    				"->" "showFQStats" 	                        	\
]

#show fabric-queue detail
#
#============================
#Go to line card shell again
#===========================
#=======================================
#!FabricFPGA 
#================================================
#
#fabricFpgaShow
#d 0xe1800000,200,2
#showFQ
#showFQStats 		
#===========================================================
#Fabric - the following command needs to be run from CLI
#Have a parallent Terminal client is open and type below
#==================================================================
#
#show fabric-queue detail
#
#============================
#Go to line card shell again
#===========================
#================================================
#FabricFPGA 
#================================================
#
#fabricFpgaShow
#d 0xe1800000,200,2
#showFQ
#showFQStats
#
#============================================================
#Fabric - the following command needs to be run from CLI - 
#Have a parallent Terminal client is open and type below 
#============================================================
#
#show fabric-queue detail
#
#============================
#Go to line card shell again
#===========================
#==========================
#FabricFPGA 
#==========================
#
#fabricFpgaShow
#d 0xe1800000,200,2
#showFQ
#showFQStats
#
#
#GE Driver Stats: {{{3
#=============
set E_GEDriverStats(SHELL) [list 								\
    				"->" "gt64260EnetShowDriverStats 1"               	\
				"->" "gt64260EnetShowDriverStats 2"                     \
]
#gt64260EnetShowDriverStats 1
#gt64260EnetShowDriverStats 2
#
#
#ICC/InternalNetwork: {{{3
#===================
set E_ICCInternalNetwork(SHELL) [list 					\
    				"->" "showIntNetStats"               	\
				"->" "showIntNetInterfaces"             \
                                "->" "showIccStats" 			\
                                "->" "showIccConn" 			\
                                "->" "showOsEventTraceLog" 		\
                                "->" "showOsEventTimeoutTraceLog" 	\
]

#showIntNetStats
#showIntNetInterfaces
#showIccStats
#showIccConn
#
#
#showOsEventTraceLog
#showOsEventTimeoutTraceLog
#
#
#The following below are GE8Hde IOA debugging commands  {{{3
#=====================================================
set E_GE8HdeIOADebug(SHELL) [list 					\
    				"->" "showGe8HdeIoa $adaptor"           \
				"->" "showGe8HdeFpga $adaptor"          \
                                "->" "showGe8HdePci $adaptor" 		\
                                "->" "showPortInfo $adaptor $port"	\
                                {Enter <number> to select, anything else to stop:} 1 	\
				"->" "showStatistics $adaptor,$port" 			\
				{Enter <number> to select, anything else to stop:} 3 	\
                                "->"  "ge8HdeIdiscDumpAll $adaptor" 			\
				"->" "ge8HdeIdiscDumpClassifierEnables $adaptor" 	\
				"->" "ge8HdeIdiscDumpEgressPacketCounters $adaptor" 	\
				"->" "ge8HdeIdiscDumpIngressPacketCounters $adaptor"	\
]

#
#showGe8HdeIoa <adaptor-0/1>
#
#showGe8HdeFpga <adaptor-0/1>
#
#showGe8HdePci <adaptor-0/1>
#
#showPortInfo <adaptor-0/1>,<portNo>
#
#*******This is an overloaded command, Select option 1 
#******* PLEASE NOTE THE ABOVE OPTION HAS TO BE CORRECTLY GIVE AS 1. RESULT IS UNEXPECETD(POSSIBLE CRASHES) IF OTHER OPTION ARE USED *******
#*******Port can be from 0-7
#
#showStatistics <adaptor-0/1>,<portNo>
#*******This is an overloaded command, Select option 3
#******* PLEASE NOTE THE ABOVE OPTION HAS TO BE CORRECTLY GIVE AS 3. RESULT IS UNEXPECETD(POSSIBLE CRASHES) IF OTHER OPTION ARE USED *******
#*******Port can be from 0-7
#
#ge8HdeIdiscDumpAll <adaptor-0/1>
#
#ge8HdeIdiscDumpClassifierEnables <adaptor-0/1>
#
#ge8HdeIdiscDumpEgressPacketCounters <adaptor-0/1>
#
#ge8HdeIdiscDumpIngressPacketCounters <adaptor-0/1>
#
#***Note:- Parameter <adaptor-0/1> indicates the adaptor index. The output needs to be taken for the adaptop that is present.
#If both adaptors are present than the output with both the parameters(0 & 1) has to be taken one after another. 
#
#
#The following below are GE20Hde IOA debugging commands  {{{3
#======================================================
#
set E_GE20HdeIOADebug(SHELL) [list 				\
    				"->" "ge20HdeIdiscDumpAll 0"    \
				"->" "ge20ShowStatistics $port" \
                                "->" "showGe20HdePci" 		\
                                "->" "showGe20HdeIoa"		\
				"->" "showGe20HdeSio 0" 	\
				"->" "showStatistics $port" 	\
                                {Enter <number> to select, anything else to stop:} 5 	\
				"->" "ge20HdeIdiscDumpEgressPacketCounters 0" 		\
				"->" "ge20HdeIdiscDumpIngressPacketCounters 0" 		\
				"->" "ge20HdeIdiscDumpClassifierEnables 0" 		\
				"->" "ge20HdeIdiscDumpInterrupts 0" 			\
]
#ge20HdeIdiscDumpAll 0
#
#ge20ShowStatistics <portNo>
#*******PortNo can be from 0-19
#
#showGe20HdePci 
#
#showGe20HdeIoa 
#
#showGe20HdeSio 0
#
#showStatistics <portNo>
#*******This is an overloaded command, Select option 5
#******* PLEASE NOTE THE ABOVE OPTION HAS TO BE CORRECTLY GIVE AS 5. RESULT IS UNEXPECETD(POSSIBLE CRASHES) IF OTHER OPTION ARE USED *******
#*******PortNo can be from 0-19
#
#ge20HdeIdiscDumpEgressPacketCounters 0
# 
#ge20HdeIdiscDumpIngressPacketCounters 0
#
#ge20HdeIdiscDumpClassifierEnables 0
#
#ge20HdeIdiscDumpInterrupts 0
# 							
#
#The following below are  tenGe1Aps IOA debugging commands  {{{3
#=========================================================
set E_TenGE1ApsIOADebug(SHELL) [list 					\
    				"->" "showTenGe1ApsEthernetDriver" 	\
                                "->" "showTenGe1ApsIoa" 		\
				"->" "showTenGe1ApsMac"			\
				"->" "showTenGe1ApsFpga"             	\
				"->" "showTenGe1ApsXfp $port"     	\
                                "->" "showTenGe1ApsXfpLower $port" 	\
                                "->" "showTenGe1ApsXfpUpper $port" 	\
]
                                      
#showTenGe1ApsEthernetDriver          showTenGe1ApsXfpUpper <PortNo>
#
#showTenGe1ApsIoa 
#
#showTenGe1ApsMac 
#
#showTenGe1ApsFpga 
#
#showTenGe1ApsXfp <PortNo>
#
#showTenGe1ApsXfpLower <PortNo>
#
#showTenGe1ApsXfpUpper <PortNo>
#
#**<PortNo> is 0 for primary port, 1 for secondary for the tenGe1Aps IOA
#
#
#=====================================================================
#Run the list again - Hence writing the commands again {{{3
#=====================================================================
#
#=================================
#Dump register PORT_RX_CALENDER 
#=================================
#d 0xd60f4500
#
#d 0xd70f4500
#
#d 0xd60f4000,200,2         for egress IXP.
#
#d 0xd70f4000,200,2        for ingress IXP.
#
#
#===========================================================
#WanFpGA - writing it twice below as needed to be run twice
#============================================================
#
#showWanFpga
#d 0xe1100000,160,4 ==> For LM10A , this is WanFPGA memory dump (*)
#d 0xe0800000,320,2 ==> For lm10APlus this is WanFpga memory dump (*)
#
#
#showWanFpga
#d 0xe1100000,160,4 ==> For LM10A , this is WanFPGA memory dump (*)
#d 0xe0800000,320,2 ==> For lm10APlus this is WanFpga memory dump (*)
#
#---------------------------------
#
#SRA (*) - written twice below because need to be run twice
#===================================================
#sraShowInternalCounts
#sraShowQueues 0
#sraShowQueues 1
#sraShowForwardingQueues 0
#sraShowForwardingQueues 1
#
#IXP
#===
#ixpEnableRxStats 0
#ixpEnableRxStats 1
#ixpEnableTxStats 0
#ixpEnableTxStats 1
#
#ddShowNZStats 0
#ddShowNZStats 1
#getAllMeStatus (0)
#getAllMeStatus (1)
#getFreeHandles 0,0
#getFreeHandles 1,0
#showTraceLog ("Egress IXP",0,1024)
#showTraceLog  ("Ingress IXP",0,1024)
#showTraceLog  ("IxpDetector",0,1024)
#showTraceLog "IxpDetectorFirstMeResets"
#
#print__11Ic1Detector
#showIxps 
#ixpStats 0
#ixpStats 1
#ixpRings 0
#ixpRings 1
#ixpMailboxStats 0
#ixpMailboxStats 1
#ixpRxStats 0,1
#ixpRxStats 1,1
#ixpTxStats 0,1
#ixpTxStats 1,1
#ixpMcastStats 1,1
#d 0xd8000030,1,4 
#d 0xd8008150,1,4 
#The Below 4 command execute after completion of IXP data collection
#ixpDisableRxStats 0
#ixpDisableRxStats 1
#ixpDisableTxStats 0
#ixpDisableTxStats 1
#
#Exception Stats:
#=============
#showFc3DmaDriver
#showFc3DmaDriverStats
#showFc3DmaDriverQueues
#showFc3DmaDriverChannels
#showTraceLog "Fc3DmaDriver"
#showIntNetStats
#showAlShimStats
#showExShim
#dosAlShowProtocolCounts
#
#
#=========================================================
#Fabric - the following command needs to be run from CLI - 
#Have a parallent Terminal client is open and type below 
#==================================================================
#
#show fabric-queue detail
#
#============================
#Go to line card shell again
#===========================
#=======================================
#!FabricFPGA 
#================================================
#
#fabricFpgaShow
#d 0xe1800000,200,2
#showFQ
#showFQStats
#===========================================================
#Fabric - the following command needs to be run from CLI
#Have a parallent Terminal client is open and type below
#==================================================================
#
#show fabric-queue detail
#
#============================
#Go to line card shell again
#===========================
#================================================
#FabricFPGA 
#================================================
#
#fabricFpgaShow
#d 0xe1800000,200,2
#showFQ
#showFQStats
#
#============================================================
#Fabric - the following command needs to be run from CLI - 
#Have a parallent Terminal client is open and type below
#==================================================================
#
#show fabric-queue detail
#
#============================
#Go to line card shell again
#===========================
#==========================
#FabricFPGA 
#================================================
#
#fabricFpgaShow
#d 0xe1800000,200,2
#showFQ
#showFQStats
#
#
#GE Driver Stats:
#=============
#gt64260EnetShowDriverStats 1
#gt64260EnetShowDriverStats 2
#
#
#ICC/InternalNetwork:
#===================
#showIntNetStats
#showIntNetInterfaces
#showIccStats
#showIccConn
#
#
#showOsEventTraceLog
#showOsEventTimeoutTraceLog
#
#
#The following below are GE8Hde IOA debugging commands 
#=====================================================
#
#showGe8HdeIoa <adaptor-0/1>
#
#showGe8HdeFpga <adaptor-0/1>
#
#showGe8HdePci <adaptor-0/1>
#
#showPortInfo <adaptor-0/1>,<portNo>
#
#*******This is an overloaded command, Select option 1 
#******* PLEASE NOTE THE ABOVE OPTION HAS TO BE CORRECTLY GIVE AS 1. RESULT IS UNEXPECETD(POSSIBLE CRASHES) IF OTHER OPTION ARE USED *******
#*******Port can be from 0-7
#
#showStatistics <adaptor-0/1>,<portNo>
#*******This is an overloaded command, Select option 3
#******* PLEASE NOTE THE ABOVE OPTION HAS TO BE CORRECTLY GIVE AS 3. RESULT IS UNEXPECETD(POSSIBLE CRASHES) IF OTHER OPTION ARE USED *******
#*******Port can be from 0-7
#
#ge8HdeIdiscDumpAll <adaptor-0/1>
#
#ge8HdeIdiscDumpClassifierEnables <adaptor-0/1>
#
#ge8HdeIdiscDumpEgressPacketCounters <adaptor-0/1>
#
#ge8HdeIdiscDumpIngressPacketCounters <adaptor-0/1>
#
#***Note:- Parameter <adaptor-0/1> indicates the adaptor index. The output needs to be taken for the adaptop that is present.
#If both adaptors are present than the output with both the parameters(0 & 1) has to be taken one after another. 
#
#
#The following below are GE20Hde IOA debugging commands 
#======================================================
#
#ge20HdeIdiscDumpAll 0
#
#ge20ShowStatistics <portNo>
#*******PortNo can be from 0-19
#
#showGe20HdePci 
#
#showGe20HdeIoa 
#
#showGe20HdeSio 0
#
#showStatistics <portNo>
#*******This is an overloaded command, Select option 5
#******* PLEASE NOTE THE ABOVE OPTION HAS TO BE CORRECTLY GIVE AS 5. RESULT IS UNEXPECETD(POSSIBLE CRASHES) IF OTHER OPTION ARE USED *******
#*******PortNo can be from 0-19
#
#ge20HdeIdiscDumpEgressPacketCounters 0
# 
#ge20HdeIdiscDumpIngressPacketCounters 0
#
#ge20HdeIdiscDumpClassifierEnables 0
#
#ge20HdeIdiscDumpInterrupts 0
#
#
#The following below are  tenGe1Aps IOA debugging commands 
#=========================================================
#showTenGe1ApsEthernetDriver 
#
#showTenGe1ApsIoa 
#
#showTenGe1ApsMac 
#
#showTenGe1ApsFpga 
#
#showTenGe1ApsXfp <PortNo>
#
#showTenGe1ApsXfpLower <PortNo>
#
#showTenGe1ApsXfpUpper <PortNo>
#
#**<PortNo> is 0 for primary port, 1 for secondary for the tenGe1Aps IOA
#
#
#
#
#=============================================================
#LAst check the below register value (RX_PORT_CALENDAR_STATUS)
#==============================================================
#
#d 0xd60f4500 
#
#
#=========================
#EXAMPLE
#================================
#d60f4500:  0000 0000 0000 0002 0000 0002 0000 0000   
#d60f4510:  0000 0000 0000 0000 0000 0000 0000 0000   *................*
#d60f4520:  0000 0000 0000 0000 0000 0000 0000 0000   *................*
#d60f4530:  0000 0000 0000 0000 0000 0000 0000 0000   
#============================================
#
#=================================================================
#if any word shows non-zero value make it "0" using below command else move to next commands
#=================================================================
#
#m d60f4500 
#
#==============================
#
#d 0xd70f4500 <--- DO the same thing for INGRESS
#
#
#=================================================================
#if any word shows non-zero value make it "0" using below command else move to next commands
#=================================================================
#
#m d70f4500 
