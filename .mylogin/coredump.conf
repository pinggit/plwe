
#e320 coredump decode related:
	##################################################################################################
	#here we use 'dirty' implementation,to automate all coredump file handlings job in JTAC work
	#'dirty' in terms of: some user-defined vars,like caseid,caselog_file,caseid_pattern,
	#are also referenced directly from within main codes
	#this is quite un-scalable and hard to maintain, need time to make it clean
	#ideally user var should be seperated from the main codes for the most extent
	##################################################################################################
	#action 1) set pattern_action_timeout to -1 for time consuming tasks
	#action 2) change caseid , dmpfilebasename, fullpath, probably junose also

	#set caseid 			"2011-1120-0076"
	#set dmpfilebasename 		"LM-10_26_11_19_2011_15_40" 
	set caseid 			"2011-1119-0035"
	set dmpfilebasename 		"TAMPFL-VFTTP-66LM-10_28_11_19_2011_04_47" 
	set dmpfilebasename 		"TAMPFL-VFTTP-66LM-10_28_11_19_2011_04_47" 
	set caseid 			"2011-1120-0068"
	set dmpfilebasename 		"LM-10_28_10_16_2011_21_00" 
	set dmpfilebasename 		"LM-10_28_11_18_2011_15_13" 
	set caseid 			"2011-1120-0070"
	set dmpfilebasename 		"LM-10_28_11_20_2011_19_05" 
	set dmpfilebasename 		"LM-10_28_10_16_2011_21_00" 
	set caseid 			"2011-1120-0076"
	set dmpfilebasename 		"LM-10_26_11_19_2011_15_40" 
	set caseid 			"2011-1120-0084"
	set dmpfilebasename 		"LM-10_27_11_20_2011_04_54" 
	set caseid 			"2011-1202-0836"
	set dmpfilebasename 		"LM-10_19_12_02_2011_21_10" 
	set dmpfilebasename 		"LM-10_29_12_02_2011_21_10" 
	set dmpfilebasename 		"LM-10_19_12_02_2011_21_32" 
	set dmpfilebasename 		"LM-10_26_12_02_2011_21_36" 
	set caseid 			"2011-1216-0637"
	set dmpfilebasename 		"LSANCA-VFTTP-127-LM-10_21_12_11_2011_20_12" 
	set caseid 			"2012-0103-0643"
	set dmpfilebasename 		"LM-10_27_01_02_2012_20_09" 
	set caseid 			"2012-0114-0081"
	set dmpfilebasename 		"LM-10_28_01_08_2012_14_29" 
	set dmpfilebasename 		"LM-10_28_01_08_2012_15_04" 
	set dmpfilebasename 		"LM-10_29_01_08_2012_14_29" 
	set dmpfilebasename 		"LM-10_29_01_15_2012_14_02" 
	set caseid 			"2012-0203-0745"
	set dmpfilebasename 		"ny167"
	set caseid 			"2012-0207-0786"
	set dmpfilebasename 		"LM-10_16_02_07_2012_14_38"
	set caseid 			"2012-0213-0908"
	set dmpfilebasename 		"HRBGPA-VFTTP-18_LM-10_19_02_13_2012_21_27"
	set caseid 			"2012-0222-0439"
	set dmpfilebasename 		"NYCMNY-VFTTP-213LM-10_28_02_20_2012_15_52"
	set caseid 			"2012-0301-0360"
	set dmpfilebasename 		"NYCMNY-VFTTP-213LM-10_28_02_20_2012_15_52"
	set caseid 			"2012-0301-0360"
	set dmpfilebasename 		"LM-10_30_03_01_2012_13_21"
	set caseid 			"2012-0303-0039"
	set dmpfilebasename 		"LM-10_20_03_02_2012_21_38"
	set caseid 			"2012-0304-0078"
	set dmpfilebasename 		"LM-10_27_03_03_2012_06_43"
	set caseid 			"2012-0318-0046"
	set dmpfilebasename 		"LM-10_19_03_17_2012_11_17"
	set caseid 			"2012-0320-0887"
	set dmpfilebasename 		"LM-10_29_03_20_2012_18_13"
	set caseid 			"2012-0322-0939"
	set dmpfilebasename 		"LM-10_29_03_20_2012_18_13"
	set caseid 			"2012-0325-0098"
	set dmpfilebasename 		"LM-10_26_03_23_2012_07_01"
	set caseid 			"2012-0517-0833"
	set dmpfilebasename 		"NWRKNJ-VFTTP-87-LM-10_18_05_17_2012_21_08"
	set caseid 			"2012-0606-0788"
	set dmpfilebasename 		"LM-10_16_06_06_2012_18_57"
	set caseid 			"2012-0605-0819"
	set dmpfilebasename 		"LM-10_30_06_05_2012_20_19"
	set caseid 			"2012-0607-0316"
	set dmpfilebasename 		"BFLONY-VFTTP-06-LM-10_20_06_07_2012_12_40"
	set caseid 			"2012-0531-0884"
	set dmpfilebasename 		"LM-10_28_06_06_2012_14_07"
	set caseid 			"2012-0619-1029"
	set dmpfilebasename 		"LM-10_28_06_19_2012_21_11"
	set caseid 			"2012-0619-0908"
	set dmpfilebasename 		"LM-10_21_06_19_2012_18_48"
	set caseid 			"2012-0702-0834"
	set dmpfilebasename 		"LM-10_27_07_02_2012_21_13"
	set caseid 			"2012-0705-0874"
	set dmpfilebasename 		"LM-10_29_07_05_2012_20_59"
	set caseid 			"2012-0618-0930"
	set dmpfilebasename 		"LM-10_29_06_18_2012_20_18"
	set caseid 			"2012-0805-0071"
	set dmpfilebasename 		"LM-10_30_08_04_2012_06_52"
	set caseid 			"2012-0805-0073"
	set dmpfilebasename 		"LM-10_30_08_04_2012_16_24"
	set caseid 			"2012-0807-0938"
	set dmpfilebasename 		"PRVDRI-VFTTP-32LM-10_21_08_07_2012_22_56"
	set caseid 			"2012-0812-0094"
	set dmpfilebasename 		"LM-10_30_08_12_2012_17_03"
	set caseid 			"2012-0811-0083"
	set dmpfilebasename 		"LM-10_26_08_09_2012_23_48"
	set caseid 			"2012-0815-0702"
	set dmpfilebasename 		"WASHDC-VFTTP-78-SLOT15"
	set caseid 			"2012-0821-0942"
	set dmpfilebasename 		"LM-10_30_08_21_2012_20_54"
	set caseid 			"2012-0828-0920"
	set dmpfilebasename 		"PHLAPA-VFTTP-59_LM-10_28_08_28_2012_18_31"
	set caseid 			"2012-0829-0459"
	set dmpfilebasename 		"LM-10_26_08_27_2012_23_36"
	set caseid 			"2012-0830-0877"
	set dmpfilebasename 		"LM-10_21_08_30_2012_15_32"
	set caseid 			"2012-0910-0889"
	set dmpfilebasename 		"LM-10_28_09_10_2012_16_38"
	set caseid 			"2012-0910-0848"
	set dmpfilebasename 		"LM-10_29_09_10_2012_12_15"
	set caseid 			"2012-0910-0944"
	set dmpfilebasename 		"LM-10_30_09_10_2012_20_32"
	set caseid 			"2012-0911-0710"
	set dmpfilebasename 		"LM-10_25_09_11_2012_01_12"
	set dmpfilebasename 		"LM-10_25_09_11_2012_06_42"
	set caseid 			"2012-0912-0467"
	set dmpfilebasename 		"LM-10_30_09_11_2012_11_22"
	set caseid 			"2012-0922-0093"
	set dmpfilebasename 		"LSANCA-VFTTP-81-LM-10_30_09_21_2012_02_36"
	set caseid 			"2012-0922-0089"
	set dmpfilebasename 		"WASHDC-VFTTP-96-LM-10_29_09_22_2012_05_35"
	set caseid 			"2012-0923-0066"
	set dmpfilebasename 		"LM-10_30_09_22_2012_11_43"
	set caseid 			"2012-0919-0588"
	set dmpfilebasename 		"LM-10_17_09_18_2012_00_57"
	set caseid 			"2012-1009-0925"
	set dmpfilebasename 		"LM-10_29_10_09_2012_18_17"
	set caseid 			"2012-1011-0936"
	set dmpfilebasename 		"LM-10_16_10_11_2012_20_25"
	set caseid 			"2012-1012-0774"
	set dmpfilebasename 		"LM-10_21_10_12_2012_19_28"
	set caseid 			"2012-1021-0144"
	set dmpfilebasename 		"LM-10_27_10_21_2012_22_02"
	set caseid 			"2012-1016-0907"
	set dmpfilebasename 		"LM-10_28_10_16_2012_19_39"
	set caseid 			"2012-1025-0808"
	set dmpfilebasename 		"Core"
	set caseid 			"2012-1026-0502"
	set dmpfilebasename 		"LM-10_28_10_26_2012_15_18"
	set caseid 			"2012-1030-0486"
	set dmpfilebasename 		"DLLSTX-VFTTP-70LM-10_29_10_30_2012_13_04"
	set caseid 			"2012-1030-0521"
	set dmpfilebasename 		"LM-10_26_10_30_2012_11_27"
	set caseid 			"2012-1031-0593"
	set dmpfilebasename 		"NYCMNY-VFTTP-220LM-10_28_10_31_2012_14_59"
	set caseid 			"2012-1101-0386"
	set dmpfilebasename 		"LM-10_20_11_01_2012_13_22"
	set caseid 			"2012-1101-0682"
	set dmpfilebasename 		"LM-10_29_11_01_2012_17_50"
	set caseid 			"2012-1101-0672"
	set dmpfilebasename 		"NYCMNY-VFTTP-160_UNKNOWN_18_11_01_2012_14_08"
	set caseid 			"2012-1101-0764"
	set dmpfilebasename 		"LM-10_20_11_01_2012_13_22"
	set caseid 			"2012-1030-0938"
	set dmpfilebasename 		"LM-10_30_10_30_2012_18_38"
	set caseid 			"2012-1102-0712"
	set dmpfilebasename 		"LSANCA-VFTTP-134-slot15"
	set caseid 			"2012-1102-0704"
	set dmpfilebasename 		"DLLSTX-VFTTP-61-slot5"
	set caseid 			"2012-1114-1047"
	set dmpfilebasename 		"LM-10_16_11_14_2012_22_39"
	set caseid 			"2012-1115-0844"
	set dmpfilebasename 		"LM-10_27_11_15_2012_20_43"
	set caseid 			"2012-1122-0478"
	set dmpfilebasename 		"LM-10_30_11_22_2012_16_12"
	set dmpfilebasename 		"LM-10_27_11_26_2012_22_15"
	set caseid 			"2012-1209-0050"
	set dmpfilebasename 		"LM-10_28_12_09_2012_02_13"
	set caseid 			"2012-1208-0136"
	set dmpfilebasename 		"slot14"
	set caseid 			"2012-1209-0093"
	set dmpfilebasename 		"LM-10_19_12_09_2012_20_21"
	set caseid 			"2012-1219-0656"
	set dmpfilebasename 		"BSTNMA-VFTTP-89LM-10_18_12_19_2012_17_03"
	set caseid 			"2012-1222-0058"
	set dmpfilebasename 		"LM-10_28_12_22_2012_14_02"
	set caseid 			"2012-1226-0176"
	set dmpfilebasename 		"BSTNMA-VFTTP-132LM-10_19_12_26_2012_13_32"
	set caseid 			"2012-1226-0166"
	set dmpfilebasename 		"LM-10_21_12_25_2012_09_57"
	set caseid 			"2012-1227-0456"
	set dmpfilebasename 		"LM-10_21_12_27_2012_17_04"
	set caseid 			"2013-0104-0470"
	set dmpfilebasename 		"LM-10_28_01_04_2013_13_21"
	set caseid 			"2013-0108-0519"
	set dmpfilebasename 		"LM-10_30_01_08_2013_14_43"
	set caseid 			"2012-1226-0166"
	set dmpfilebasename 		"NYCMNY-VFTTP-98_LM-10_21_01_14_2013_18_50"
	set caseid 			"2013-0118-0398"
	set dmpfilebasename 		"LM-10_28_01_18_2013_15_00"
	set caseid 			"2013-0208-0318"
	set dmpfilebasename 		"BLTMMD-VFTTP-58LM-10_29_02_08_2013_06_51"
	set caseid 			"2013-0211-0586"
	set dmpfilebasename 		"LM-10_30_02_11_2013_16_09"
	set caseid 			"2013-0211-0434"
	set dmpfilebasename 		"LM-10_26_02_11_2013_15_10"
	set caseid 			"2013-0214-0663"
	set dmpfilebasename 		"LM-10_25_02_13_2013_20_00"
	set caseid 			"2013-0303-0089"
	set dmpfilebasename 		"LM-10_19_03_03_2013_19_46"
	set caseid 			"2013-0304-0570"
	set dmpfilebasename 		"DLLSTX-VFTTP-95LM-10_29_03_04_2013_13_58"
	set caseid 			"2013-0305-1096"
	set dmpfilebasename 		"slot11"
	set caseid 			"2013-0307-0605"
	set dmpfilebasename 		"LM-10_18_03_07_2013_15_05"
	set caseid 			"2013-0306-0692"
	set dmpfilebasename 		"TAMPFL-VFTTP-96_LM-10_26_03_06_2013_12_09"
	set caseid 			"2013-0313-0655"
	set dmpfilebasename 		"LM-10_18_03_13_2013_15_17"
	set caseid 			"2013-0312-0959"
	set dmpfilebasename 		"LM-10_26_03_19_2013_05_26"
	set caseid 			"2013-0326-1038"
	set dmpfilebasename 		"LM-10_28_03_26_2013_13_42"
	set caseid 			"2013-0331-0165"
	set dmpfilebasename 		"LM-10_29_03_31_2013_15_01"
	set caseid 			"2013-0404-0651"
	set dmpfilebasename 		"LM-10_21_04_04_2013_17_03"
	set caseid 			"2013-0408-1074"
	set dmpfilebasename 		"LM-10_28_04_08_2013_23_48"
	set caseid 			"2013-0318-0512"
	set dmpfilebasename 		"LM-10_26_03_19_2013_05_26"
	set dmpfilebasename 		"NYCMNY-VFTTP-133_SRP-320_7_SC_03_18_2013_13_33"
	set caseid 			"2013-0413-0133"
	set dmpfilebasename 		"LM-10_21_04_13_2013_19_09"
	set caseid 			"2013-0414-0104"
	set dmpfilebasename 		"LM-10_21_04_14_2013_15_12"
	set caseid 			"2013-0414-0177"
	set dmpfilebasename 		"OC3_OC12-ATM_1_04_14_2013_23_27"
	set caseid 			"2013-0414-0096"
	set dmpfilebasename 		"LM-10_27_04_14_2013_11_39"
	set caseid 			"2013-0416-0666"
	set dmpfilebasename 		"ALBYNY-VFTTP-04LM-10_27_04_16_2013_15_10"
	set caseid 			"2013-0505-0018"
	set dmpfilebasename 		"LSANCA-VFTTP-71LM-10_26_05_05_2013_10_23"
	set caseid 			"2013-0508-0819"
	set dmpfilebasename 		"LM-10_29_05_08_2013_19_05"
	set caseid 			"2013-0509-0701"
	set dmpfilebasename 		"PHLAPA-VFTTP-92_LM-10_30_05_09_2013_19_12"
	set caseid 			"2013-0608-1037"
	set dmpfilebasename 		"disk1"
	set caseid 			"2013-0616-0109"
	set dmpfilebasename 		"LM-10_21_06_16_2013_18_08"
	set caseid 			"2013-0702-0751"
	set dmpfilebasename 		"LM-10_17_07_02_2013_17_30"
	set caseid 			"2013-0616-0100"
	set dmpfilebasename 		"CMDNNJ-VFTTP-55SRP-320_6_SC_06_17_2013_15_14"
	set caseid 			"2013-0711-0785"
	set dmpfilebasename 		"LM-10_30_07_11_2013_17_53"
	set caseid 			"2013-0716-0824"
	set dmpfilebasename 		"LM-10_28_07_16_2013_18_22"
	set caseid 			"2013-0723-0821"
	set dmpfilebasename 		"LM-10_27_07_23_2013_18_12"
	set caseid 			"2013-0805-0762"
	set dmpfilebasename 		"LM-10_27_08_05_2013_14_45"
	set caseid 			"2013-0805-0758"
	set dmpfilebasename 		"LM-10_29_08_05_2013_14_35"
	set caseid 			"2013-0807-0739"
	set dmpfilebasename 		"slot5"
	set caseid 			"2013-0814-0709"
	set dmpfilebasename 		"slot11-2"
	set dmpfilebasename 		"slot16"
	set caseid 			"2013-0831-0059"
	set dmpfilebasename 		"NRFLVA-VFTTP-33-LM-10_27_08_31_2013_14_15"
	set caseid 			"2013-1128-0557"
	set dmpfilebasename 		"LM-10_25_11_28_2013_20_41"
	set caseid 			"2013-1128-0527"
	set dmpfilebasename 		"LSANCA-VFTTP-180LM-10_30_11_28_2013_18_32"

	#this can be further omitted, (go to the dir and get the dmp filename), 
	#need more coding, t.b.d
	#set caseid 			"2011-0813-0026"
	#set dmpfilebasename 		"LM-10_28_08_13_2011_03_27" 
	#set caseid 			"2011-0812-0708"
	#set dmpfilebasename 		"Core" 
	#-hw  {srp, srp310, srp320, lm4, lm10, linecard}
	set hw 				"srp320"
	set hw 				"lm10"
	set decode_only 		0
	set deleteudmp_after_done 	0
	set work_on_lm10_only           0
	#set dmphost 			"win2kvm"
	#set dmphost_pass 		"redback123"
	#set dmphost 			"radius"
	set dmphost 			"testers"
	set dmphost_pass 		"lab"

	#this is for log cmd only
	set caselog_dir 		"~/vzlogs"
	set caselog_file 		"$caselog_dir/$caseid.log"

	#for !lc xxxx-xxxx-xxxx cmd only
	#set caseid_pattern 		"\[1-9]\[0-9]\[0-9]\[0-9]-\[0-9]\[0-9]\[0-9]\[0-9]-\[0-9]\[0-9]\[0-9]\[0-9]"
	set caseid_pattern 		{[1-9][0-9][0-9][0-9]-[0-9][0-9][0-9][0-9]-[0-9][0-9][0-9][0-9]}
	#this doesn't work, don't know why
	#set caseid_pattern 		{[1-9]{4}-[0-9]{4}-[0-9]{4}}
	

	#corefiles are usually only located in one of these 3 folders:
	set dmpfileftppath1 		"/mnt/ftp/$caseid/$dmpfilebasename.dmp"
	set dmpfileftppath2 		"/mnt/ftp/$dmpfilebasename.dmp"
	set dmpfilehomepath 		"/mnt/home/public_html/casedata/$caseid/$dmpfilebasename.dmp"
	#set dmpfilehomepath 		"/mnt/home/$dmpfilebasename.dmp"

	#currently I (we?) only know sth about lm10 dmp decode
	set junose 			"12-1-1p0-2" 
	set junose 			"9-0-1p0-7-5-2" 
	set junose 			"9-0-1p0-7-5" 
	set junose 			"12-1-1p0-3" 
	set junose 			"12-1-1p0-6" 
	set mem 			256
	switch -- $hw \
	"lm10" {
	    set mem 1024
	} "lm4" {
	    set mem 512
	} "srp320" {
	    set mem 4096
	}

	#these are for !ea cmd only
	set decodelog_file 		"~/vzlogs/$caseid-$dmpfilebasename.decode.log"

	set dmp_upload_dir1 		"/mnt/coredumps/$caseid/"
	set dmp_upload_dir2 		"/mnt/coredumps2/$caseid/"

	#set decompress 		"coreDumpDecompress.exe \\\\wf-ccstage\\coredumps\\2011\\$caseid\\$dmpfilebasename.dmp"
	set decompress 			"coreDumpDecompress.exe $caseid/$dmpfilebasename.dmp "

	#set mounthome 			{net use N: \\10.10.4.35\pings}
	#set umounthome 		{net use N: /delete}
	#set decode 			"pccl_pang.exe -debug C:\\pings\\$junose\\lm10.debug -core \\\\wf-ccstage\\coredumps\\2011\\$caseid\\$dmpfilebasename.udmp -mem 1024 -hw lm10"
	#set decode 			"pccl_pang.exe -debug C:\\pings\\$junose\\lm10.debug -core C:\\pings\\$caseid\\$dmpfilebasename.udmp -mem $mem -hw $hw"
	set decode 			"pccl_pang.exe -debug $junose/$hw.debug -core $caseid/$dmpfilebasename.udmp -mem $mem -hw $hw"
	
	
	#start some customerized work , here is an example: coredump file handling:
	# upload,decompress,decode the dmp file and
	# then process,upload,or extract the log file
	set core(SHELL) 		{ E_dmp_pre_handle 				\
					  dmp_decompress_decode_from_win 		\
					  dmp_post_handle  				\
					}

	#prepare case folders in wfccstage, windows server, and find the file, for later processing
	set E_dmp_pre_handle(SHELL) 							\
	    [ list 						\
		"\\\$" "if \[ ! -d $dmp_upload_dir1 \]; then mkdir $dmp_upload_dir1; fi" 				\
		"\\\$" "dmpfileftppath1=$dmpfileftppath1; dmpfileftppath2=$dmpfileftppath2" 			\
		"\\\$" "dmpfilehomepath=$dmpfilehomepath" 								\
		"\\\$" {file $dmpfileftppath1 $dmpfileftppath2 $dmpfilehomepath} 					\
		"\\\$" {if [ -e $dmpfilehomepath ]; then dmpf=$dmpfilehomepath; elif [ -e $dmpfileftppath1 ]; then dmpf=$dmpfileftppath1; else dmpf=$dmpfileftppath2; fi} 	\
		"\\\$" {echo $dmpf} 										\
		"\\\$" {stat -t $dmpf} 	 									\
	     ]
#		"\\\$" "if \[ ! -d /mnt/radius/$caseid \]; then mkdir /mnt/radius/$caseid; fi" 				\
#		"\\\$" "if \[ ! -e \$dmpfilehomepath \]; then mkdir /mnt/home/public_html/$caseid; fi " 	\
#		"\\\$" "if \[ ! -e \$dmpfilehomepath \]; then rsync -aP \$dmpf \$dmpfilehomepath; fi" 		\

	#set E_dmp_cp2pc(SHELL) 		[ list "\\\$" "rsync -avP \$dmpf /mnt/radius/$caseid" ]
	set E_dmp_cp2pc(SHELL) 		[ list "\\\$" "rsync -avP \$dmpf $dmphost:pings/$caseid/"  	\
						"assword" "$dmphost_pass" 	\
					]

	#based on line card type, do different handling
        if $work_on_lm10_only {
            if {$hw=="lm10"} {
                #I only know some lm10 shell cmd , mostly just the print__11.., so far that it's worth decompress and decode...
                set dmp_decompress_decode_from_win(SHELL) { 				\
                                            E_dmp_cp2pc 					\
                                            E_dmp_login_win  				\
                                            dmp_decompress_and_or_decode  			\
                                            E_dmp_logout_win 				\
                }
                #so some post handling are needed for lm10 decoded log file
                set dmp_post_handle(SHELL) { E_dmp_post_handle E_dmp_upload_to_de }
            } else {
                #for other cards I have no idea, so just upload them to DE
                set dmp_decompress_decode_from_win(SHELL) "" 
                set dmp_post_handle(SHELL) { E_dmp_upload_to_de }
            }
        } else {

                set dmp_decompress_decode_from_win(SHELL) { 				\
                                            E_dmp_cp2pc 					\
                                            E_dmp_login_win  				\
                                            dmp_decompress_and_or_decode  			\
                                            E_dmp_logout_win 				\
                }
                #so some post handling are needed for lm10 decoded log file
                set dmp_post_handle(SHELL) { E_dmp_post_handle E_dmp_upload_to_de }
        }

	set E_dmp_login_win(SHELL) 						\
					[ list 					\
					    "\\\$" "ssh $dmphost" 		\
					    "assword" "$dmphost_pass" 		\
					    "\\\$" "cd pings"  			\
					]


	if $decode_only {
	    set dmp_decompress_and_or_decode(SHELL) { E_dmp_decode }
	} else {
	    set dmp_decompress_and_or_decode(SHELL) { E_dmp_decompress E_dmp_decode }
	}

	set E_dmp_decompress(SHELL) 	[ list "\\\$" "$decompress" ]

	set E_dmp_decode(SHELL) 					\
					[ list 					\
					    "\\\$" "$decode" 			\
					    "->" "print__11Ic1Detector" 	\
					    "->" "showIxps" 			\
					    "->" "showIcImageFixClient" 	\
					    "->" {showTraceLog("sraDetector")} 	\
					    "->" {showTraceLog ("IxpDetector")}	\
					    "->" {showTraceLog ("Egress IXP")} 	\
					    "->" {showTraceLog "lm10DosAL"} 	\
					    "->" showCrashDump 			\
					    "->" {getSraDebugTrace 0,16}  	\
					    "->" "printLast48IntermediateMinorPanics" \
					    "->" "printLast12IntermediateMajorPanics" \
					    "->" "fabricFpgaShow" 		\
					    "->" {dumpPools "luInstructions:nextHop"} \
                                            "->" {showTraceLog "IpAdaptationLayer"} \
                                            "->" {showExShim} \
                                            "->" {showExShimClients} \
                                            "->" {showAlShimStats} \
                                            "->" {dosAlShowProtocolCounts} \
                                            "->" {iosFdShow} \
					]

	#set E_dmp_decode_clis(SHELL) 	"$lm10_dmp_decode_shell"
	if {$deleteudmp_after_done} {
	    set E_dmp_logout_win(SHELL) 					\
					    [ list 				\
						"->" "exit" 			\
						"\\\$" "rm $caseid/*.udmp" 	\
						"\\\$" "exit" 			\
					    ]
	} else {
	    set E_dmp_logout_win(SHELL) 					\
					    [ list 				\
						"->" "exit" 			\
						"\\\$" "exit" 			\
					    ]
	}

	set E_dmp_post_handle(SHELL) 						\
					[ list 					\
					    "\\\$" "todos $decodelog_file" 				\
					    "\\\$" "cp $decodelog_file $dmp_upload_dir1" 		\
					    "\\\$" "cd $dmp_upload_dir1" 				\
					    "\\\$" "decoded_fbase=$caseid-$dmpfilebasename" 		\
					    "\\\$" "sed '1,60d' \$decoded_fbase.decode.log > \$decoded_fbase-decoded.log" 	\
					    "\\\$" "rm \$decoded_fbase.decode.log" 			\
					    "\\\$" "cd" 						\
					]
					    #other options:
					    #"\\\$" "myfilename=\$(basename $decodelog_file)" 		\
					    #"\\\$" "mybasename=\$\{\$myfilename%.*.*\}" 			\
					    #"\\\$" "mydirname=\$(dirname $mylog_file)" 			\
					    #"\\\$" "newfilename=$caseid.decode.log" 			\
					    #"\\\$" "newfullname=\$mydirname\$newfilename" 		\
					    #"\\\$" "cp $mylog_file \$newfullname"			\
					    #"name" "herndon" 			\
#					    more automated, get dmp file name per site name, using glob
#					    "\\\$" "rsync -aP `ls *$siteid*.dmp` /mnt/coredumps/$caseid/`ls *$siteid*.dmp`" 	\
#					    attached the decode result to case
#					    "$" "attachcase.sh $caseid" 	\
#					    "\\\$" "attachcase.sh \$decoded_fbase-decoded.log"		\
#
	set E_dmp_upload_to_de(SHELL) 							\
					[ list 						\
					    "\\\$" "rsync -aP \$dmpf $dmp_upload_dir1" 	\
					    "\\\$" "rsync -aP \$dmpf $dmp_upload_dir2" 	\
					]
